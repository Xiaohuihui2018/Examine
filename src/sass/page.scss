/*
	* 语法（兼容css语法）
		* 单行注释
		* 多行注释
		* 变量
			* 格式：$变量名:值;
			* 分类
				* 全局
					* global
				* 局部
			* 使用：
				* 一般用法：用在属性值
				* 特殊用法：
					* 属性名/选择器
			* 多值变量
				* list：（类似array）
				* map：（类似object）
		* 导入:import
			* 可以省略后缀名scss
			* 可以省略前下划线_
		* 循环
			* @for

	* 编译（scss => css）
		* gulp-sass <- gulp <- npm <- nodejs
		* 文件名以_开头的sass文件不会被编译成css文件
 */


//单行注释


// 全局变量
$mainColor:#58bc58;
$pd:15px;

.goods{
	// 局部变量
	// $pd:10px;

	$pd:10px !global;//修改全局变量

	padding:$pd;border:1px solid $mainColor;//10px
}

.page{
	padding:$pd;//15px
	background-color:#efefef;

	span{display:inline-block;padding:5px;color:#666;border:1px solid #ddd;}
}

nav{
	border-bottom:2px solid #ddd;background-color:#000;
	li{display:inline-block;padding:5px 10px;color:#fff}
}


// 函数声明必须写在使用前
@function getFontSize(){
	@return 5px;
}

$dir:top;

.box{
	//变量使用在属性名
	border-#{$dir}:1px solid #ddd;
}

// 变量用在选择器
@for $i from 1 to 6{
	h#{$i}{
		// background-color:$mainColor/$i;
		background-color:lighten($mainColor,percentage($i/20));
		font-size:50px/$i;
		border-bottom:getFontSize() solid #f00;
	}
}



//h1:50px
//h2:25px
//h3:17px
//h4:12.5
//h5:10px
//h5:8.3333px



// 多值变量
// list类型变量
// nth()
$pd: 5px 10px 20px 30px;

// map类型变量
// map-get()
$headings: (h1: 2em, h2: 1.5em, h3: 1.2em);

// 使用
.container{
	padding:$pd;
	border-top:nth($pd,2);
	font-size:map-get($headings,h1);
}


// 占位符
%box{
	font-size:24px;
	color:#f60;
	background-color:#666;
	transition:color 1s;
}


#content {
  article {
    h1 {
    	@extend h1;
    	color: #333;
	
		//父级选择器
		&:hover{color:$mainColor;}
    }
    p { margin-bottom: map-get($headings,h2) }
  }
  aside { background-color: #EEE }
  .desc{
  	@extend %box;
  }

  h4{
  	@extend %box;
  	font-size:18px;
  	color:#666;
  }
  h6{font-size:13px}
}